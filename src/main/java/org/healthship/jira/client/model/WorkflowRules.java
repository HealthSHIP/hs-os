/*
 * Copyright (c) 2020 Ronald MacDonald <ronald@rmacd.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.healthship.jira.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A collection of transition rules.
 */
@ApiModel(description = "A collection of transition rules.")
@JsonPropertyOrder({
  WorkflowRules.JSON_PROPERTY_CONDITIONS,
  WorkflowRules.JSON_PROPERTY_VALIDATORS,
  WorkflowRules.JSON_PROPERTY_POST_FUNCTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-29T15:40:13.931673+01:00[Europe/London]")
public class WorkflowRules {
  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private List<WorkflowTransitionRule> conditions = new ArrayList<>();

  public static final String JSON_PROPERTY_VALIDATORS = "validators";
  private List<WorkflowTransitionRule> validators = new ArrayList<>();

  public static final String JSON_PROPERTY_POST_FUNCTIONS = "postFunctions";
  private List<WorkflowTransitionRule> postFunctions = new ArrayList<>();


  public WorkflowRules conditions(List<WorkflowTransitionRule> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public WorkflowRules addConditionsItem(WorkflowTransitionRule conditionsItem) {
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * The workflow conditions.
   * @return conditions
  **/
  @ApiModelProperty(required = true, value = "The workflow conditions.")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WorkflowTransitionRule> getConditions() {
    return conditions;
  }


  public void setConditions(List<WorkflowTransitionRule> conditions) {
    this.conditions = conditions;
  }


  public WorkflowRules validators(List<WorkflowTransitionRule> validators) {
    
    this.validators = validators;
    return this;
  }

  public WorkflowRules addValidatorsItem(WorkflowTransitionRule validatorsItem) {
    this.validators.add(validatorsItem);
    return this;
  }

   /**
   * The workflow validators.
   * @return validators
  **/
  @ApiModelProperty(required = true, value = "The workflow validators.")
  @JsonProperty(JSON_PROPERTY_VALIDATORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WorkflowTransitionRule> getValidators() {
    return validators;
  }


  public void setValidators(List<WorkflowTransitionRule> validators) {
    this.validators = validators;
  }


  public WorkflowRules postFunctions(List<WorkflowTransitionRule> postFunctions) {
    
    this.postFunctions = postFunctions;
    return this;
  }

  public WorkflowRules addPostFunctionsItem(WorkflowTransitionRule postFunctionsItem) {
    this.postFunctions.add(postFunctionsItem);
    return this;
  }

   /**
   * The workflow post functions.
   * @return postFunctions
  **/
  @ApiModelProperty(required = true, value = "The workflow post functions.")
  @JsonProperty(JSON_PROPERTY_POST_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WorkflowTransitionRule> getPostFunctions() {
    return postFunctions;
  }


  public void setPostFunctions(List<WorkflowTransitionRule> postFunctions) {
    this.postFunctions = postFunctions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowRules workflowRules = (WorkflowRules) o;
    return Objects.equals(this.conditions, workflowRules.conditions) &&
        Objects.equals(this.validators, workflowRules.validators) &&
        Objects.equals(this.postFunctions, workflowRules.postFunctions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, validators, postFunctions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowRules {\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    validators: ").append(toIndentedString(validators)).append("\n");
    sb.append("    postFunctions: ").append(toIndentedString(postFunctions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

