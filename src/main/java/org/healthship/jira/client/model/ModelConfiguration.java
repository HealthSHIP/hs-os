/*
 * Copyright (c) 2020 Ronald MacDonald <ronald@rmacd.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.healthship.jira.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Details about the configuration of Jira.
 */
@ApiModel(description = "Details about the configuration of Jira.")
@JsonPropertyOrder({
  ModelConfiguration.JSON_PROPERTY_VOTING_ENABLED,
  ModelConfiguration.JSON_PROPERTY_WATCHING_ENABLED,
  ModelConfiguration.JSON_PROPERTY_UNASSIGNED_ISSUES_ALLOWED,
  ModelConfiguration.JSON_PROPERTY_SUB_TASKS_ENABLED,
  ModelConfiguration.JSON_PROPERTY_ISSUE_LINKING_ENABLED,
  ModelConfiguration.JSON_PROPERTY_TIME_TRACKING_ENABLED,
  ModelConfiguration.JSON_PROPERTY_ATTACHMENTS_ENABLED,
  ModelConfiguration.JSON_PROPERTY_TIME_TRACKING_CONFIGURATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-29T15:40:13.931673+01:00[Europe/London]")
public class ModelConfiguration {
  public static final String JSON_PROPERTY_VOTING_ENABLED = "votingEnabled";
  private Boolean votingEnabled;

  public static final String JSON_PROPERTY_WATCHING_ENABLED = "watchingEnabled";
  private Boolean watchingEnabled;

  public static final String JSON_PROPERTY_UNASSIGNED_ISSUES_ALLOWED = "unassignedIssuesAllowed";
  private Boolean unassignedIssuesAllowed;

  public static final String JSON_PROPERTY_SUB_TASKS_ENABLED = "subTasksEnabled";
  private Boolean subTasksEnabled;

  public static final String JSON_PROPERTY_ISSUE_LINKING_ENABLED = "issueLinkingEnabled";
  private Boolean issueLinkingEnabled;

  public static final String JSON_PROPERTY_TIME_TRACKING_ENABLED = "timeTrackingEnabled";
  private Boolean timeTrackingEnabled;

  public static final String JSON_PROPERTY_ATTACHMENTS_ENABLED = "attachmentsEnabled";
  private Boolean attachmentsEnabled;

  public static final String JSON_PROPERTY_TIME_TRACKING_CONFIGURATION = "timeTrackingConfiguration";
  private TimeTrackingConfiguration timeTrackingConfiguration = null;


   /**
   * Whether the ability for users to vote on issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
   * @return votingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability for users to vote on issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.")
  @JsonProperty(JSON_PROPERTY_VOTING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVotingEnabled() {
    return votingEnabled;
  }




   /**
   * Whether the ability for users to watch issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
   * @return watchingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability for users to watch issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.")
  @JsonProperty(JSON_PROPERTY_WATCHING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWatchingEnabled() {
    return watchingEnabled;
  }




   /**
   * Whether the ability to create unassigned issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
   * @return unassignedIssuesAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability to create unassigned issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.")
  @JsonProperty(JSON_PROPERTY_UNASSIGNED_ISSUES_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUnassignedIssuesAllowed() {
    return unassignedIssuesAllowed;
  }




   /**
   * Whether the ability to create subtasks for issues is enabled.
   * @return subTasksEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability to create subtasks for issues is enabled.")
  @JsonProperty(JSON_PROPERTY_SUB_TASKS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSubTasksEnabled() {
    return subTasksEnabled;
  }




   /**
   * Whether the ability to link issues is enabled.
   * @return issueLinkingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability to link issues is enabled.")
  @JsonProperty(JSON_PROPERTY_ISSUE_LINKING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIssueLinkingEnabled() {
    return issueLinkingEnabled;
  }




   /**
   * Whether the ability to track time is enabled. This property is deprecated.
   * @return timeTrackingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability to track time is enabled. This property is deprecated.")
  @JsonProperty(JSON_PROPERTY_TIME_TRACKING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTimeTrackingEnabled() {
    return timeTrackingEnabled;
  }




   /**
   * Whether the ability to add attachments to issues is enabled.
   * @return attachmentsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the ability to add attachments to issues is enabled.")
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAttachmentsEnabled() {
    return attachmentsEnabled;
  }




   /**
   * The configuration of time tracking.
   * @return timeTrackingConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The configuration of time tracking.")
  @JsonProperty(JSON_PROPERTY_TIME_TRACKING_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeTrackingConfiguration getTimeTrackingConfiguration() {
    return timeTrackingConfiguration;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelConfiguration _configuration = (ModelConfiguration) o;
    return Objects.equals(this.votingEnabled, _configuration.votingEnabled) &&
        Objects.equals(this.watchingEnabled, _configuration.watchingEnabled) &&
        Objects.equals(this.unassignedIssuesAllowed, _configuration.unassignedIssuesAllowed) &&
        Objects.equals(this.subTasksEnabled, _configuration.subTasksEnabled) &&
        Objects.equals(this.issueLinkingEnabled, _configuration.issueLinkingEnabled) &&
        Objects.equals(this.timeTrackingEnabled, _configuration.timeTrackingEnabled) &&
        Objects.equals(this.attachmentsEnabled, _configuration.attachmentsEnabled) &&
        Objects.equals(this.timeTrackingConfiguration, _configuration.timeTrackingConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(votingEnabled, watchingEnabled, unassignedIssuesAllowed, subTasksEnabled, issueLinkingEnabled, timeTrackingEnabled, attachmentsEnabled, timeTrackingConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelConfiguration {\n");
    sb.append("    votingEnabled: ").append(toIndentedString(votingEnabled)).append("\n");
    sb.append("    watchingEnabled: ").append(toIndentedString(watchingEnabled)).append("\n");
    sb.append("    unassignedIssuesAllowed: ").append(toIndentedString(unassignedIssuesAllowed)).append("\n");
    sb.append("    subTasksEnabled: ").append(toIndentedString(subTasksEnabled)).append("\n");
    sb.append("    issueLinkingEnabled: ").append(toIndentedString(issueLinkingEnabled)).append("\n");
    sb.append("    timeTrackingEnabled: ").append(toIndentedString(timeTrackingEnabled)).append("\n");
    sb.append("    attachmentsEnabled: ").append(toIndentedString(attachmentsEnabled)).append("\n");
    sb.append("    timeTrackingConfiguration: ").append(toIndentedString(timeTrackingConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

